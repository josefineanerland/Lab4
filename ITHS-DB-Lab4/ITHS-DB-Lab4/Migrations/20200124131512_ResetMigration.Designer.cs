// <auto-generated />
using System;
using ITHS_DB_Lab4.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ITHS_DB_Lab4.Migrations
{
    [DbContext(typeof(Lab4Context))]
    [Migration("20200124131512_ResetMigration")]
    partial class ResetMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ITHS_DB_Lab4.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("EquipmentId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("ITHS_DB_Lab4.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ExerciseId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("ITHS_DB_Lab4.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ITHS_DB_Lab4.Models.Workout", b =>
                {
                    b.Property<int>("WorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<TimeSpan>("Time");

                    b.Property<string>("Type");

                    b.Property<int>("UserId");

                    b.HasKey("WorkoutId");

                    b.HasIndex("UserId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("ITHS_DB_Lab4.Models.WorkoutEquipment", b =>
                {
                    b.Property<int>("WorkoutId");

                    b.Property<int>("EquipmentId");

                    b.HasKey("WorkoutId", "EquipmentId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("WorkoutEquipment");
                });

            modelBuilder.Entity("ITHS_DB_Lab4.Models.WorkoutExercise", b =>
                {
                    b.Property<int>("WorkoutId");

                    b.Property<int>("ExerciseId");

                    b.Property<int?>("Reps");

                    b.Property<int?>("Strain")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(5);

                    b.HasKey("WorkoutId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("WorkoutExercises");
                });

            modelBuilder.Entity("ITHS_DB_Lab4.Models.Workout", b =>
                {
                    b.HasOne("ITHS_DB_Lab4.Models.User", "User")
                        .WithMany("Workouts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ITHS_DB_Lab4.Models.WorkoutEquipment", b =>
                {
                    b.HasOne("ITHS_DB_Lab4.Models.Equipment", "Equipment")
                        .WithMany("WorkoutEquipment")
                        .HasForeignKey("EquipmentId")
                        .HasConstraintName("FK_WorkoutEquipment_Equipment")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ITHS_DB_Lab4.Models.Workout", "Workout")
                        .WithMany("WorkoutEquipment")
                        .HasForeignKey("WorkoutId")
                        .HasConstraintName("FK_WorkoutEquipment_Workout")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ITHS_DB_Lab4.Models.WorkoutExercise", b =>
                {
                    b.HasOne("ITHS_DB_Lab4.Models.Exercise", "Exercise")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("ExerciseId")
                        .HasConstraintName("FK_WorkoutExercise_Exercise")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ITHS_DB_Lab4.Models.Workout", "Workout")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("WorkoutId")
                        .HasConstraintName("FK_WorkoutExercise_Workout")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
